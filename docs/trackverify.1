.TH "trackverify" 1 "July 20, 2010" "" "Track Verify"
.SH NAME
trackverify \- verifies the data content of tracks
.SH SYNOPSIS
trackverify [OPTIONS] <track 1> [track 2] ...
.SH DESCRIPTION
.PP
trackverify takes one or more audio tracks, verifies their files
for correctness, and displays its results to standard output.
If directories are given, they are searched recursively for any
supported audio files and verified if found.
.SH OPTIONS
.TP
\fB-h, --help\fR
Show a list of options and exit
.TP
\fB--version\fR
Show the program's version and exit
.TP
\fB-t \fItype\fB, --type=\fItype\fR
An audio format to restrict searching to.
If given, only files of the given audio types will be verified.
May be used multiple times.
For a list of available audio formats, try:
.B \-t
.B help
.TP
\fB-R, --no-summary\fR
Do not display summary information when verification is complete.
.SH VERIFICATION
.PP
All audio formats do not carry an equal measure of error protection.
What Python Audio Tools is capable to detecting depends on the audio format.
For example, FLAC files have their frame checksums verified,
in addition to the file's MD5 hash.
Files packed in Ogg containers have their Ogg page checksums verified.
However, for formats such as Wave, there is no standard way to verify
that its data content is correct; we can only ensure that its
blocks of data are the correct size.
.SH EXAMPLES
.LP
Check all FLAC files in the current directory:
.IP
.B trackverify
.I *.flac
.LP
Check only MP3 files found in the directory \fIaudio/\fR:
.IP
.B trackverify \-t
.I mp3
.B audio/
.SH SEE ALSO
.BR audiotools-config (1),
.BR cd2track (1),
.BR cd2xmcd (1),
.BR cdinfo (1),
.BR coverdump (1),
.BR coverview (1),
.BR editxmcd (1),
.BR record2track (1),
.BR track2cd (1),
.BR track2track (1),
.BR track2xmcd (1),
.BR trackcat (1),
.BR trackcmp (1),
.BR trackinfo (1),
.BR tracklength (1),
.BR tracklint (1),
.BR trackplay (1),
.BR trackrename (1),
.BR tracksplit (1),
.BR tracktag (1)
.SH AUTHOR
Brian Langenberger
